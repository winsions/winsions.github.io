<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[java常用的jar包]]></title>
      <url>%2F2017%2F04%2F12%2Fjava%E5%B8%B8%E7%94%A8%E7%9A%84jar%E5%8C%85%2F</url>
      <content type="text"><![CDATA[Java开发中主要用到的jar包介绍commons-io.jar：可以看成是java.io的扩展，用来帮助进行IO功能开发．它包含三个主要的领域:Utilityclasses-提供一些静态方法来完成公共任务．Filters-提供文件过滤器的各种实现．Streams-提供实用的Stream，reader与writer实现． commons-beanutils.jar：提供对Java反射和自省API的包装，主要提供了对于 JavaBean进行各种操作。commons-digester.jar:它能方便地将XML文档所定义的元素转化为JAVA对象，其实它的用法有点象栈(当然内在的原理就是那个古老的东西,只是提供了更高一层的封装)。 commons-lang.jar:它扩展了标准 java.langAPI，增加了字符串操作方法、基本数值方法、对象反射、创建和串行化以及System属性。它还包含一个可继承的enum类型、对多种嵌套的Exception类型的支持、对java.util.Date的增强以及用于构建方法的实用程序，例如自动生成 toString()的结果、自动实现hashCode()和equals()方法、数组操作、枚举、日期和时间的处理等等。ArrayUtils–用于对数组的操作，如添加、查找、删除、子数组、倒序、元素类型转换等；BitField–用于操作位元，提供了一些方便而安全的方法；BooleanUtils–用于操作和转换boolean或者Boolean及相应的数组；CharEncoding–包含了Java环境支持的字符编码，提供是否支持某种编码的判断；CharRange–用于设定字符范围并做相应检查；CharSet–用于设定一组字符作为范围并做相应检查；CharSetUtils–用于操作CharSet；CharUtils–用于操作char值和Character对象；ClassUtils–用于对Java类的操作，不使用反射；ObjectUtils–用于操作Java对象，提供null安全的访问和其他一些功能；RandomStringUtils–用于生成随机的字符串；SerializationUtils–用于处理对象序列化，提供比一般Java序列化更高级的处理能力；StringEscapeUtils–用于正确处理转义字符，产生正确的Java、JavaScript、HTML、XML和SQL代码；StringUtils–处理String的核心类，提供了相当多的功能；SystemUtils–在java.lang.System基础上提供更方便的访问，如用户路径、Java版本、时区、操作系统等判断；Validate–提供验证的操作，有点类似assert断言；WordUtils–用于处理单词大小写、换行等。commons-codec.jar：包含一些通用的编码解码算法。包括一些语音编码器，Hex,Base64, 以及URLencoder。 commons-collections.jar：提供一个类包来扩展和增加标准的JavaCollection框架。Bag接口：适用于包含一个对象的多个拷贝的集合Buffer接口：适用于具有顺序的集合类，例如FIFOs(先进先出)BidiMap(双向映射)：可以通过值查找键，也可以通过键查找值Map迭代器：提供了对映射的快速迭代对类型检查进行了封装，确保特定类的实例可以被添加到集合中对转换进行了封装，将集合中的对象转换成被加入时的类型对集合进行组合，使多个集合看起来就像一个集合一样有序映射和set，保持元素添加时的顺序，包括一个基于LRU的map标识映射可以给予对象的==来比较对象，而不是基于equals方法引用映射可以允许键and/or值可以有控制的进行回收很多比较器的实现很多迭代器的实现从数组或者枚举到集合的适配器用来测试或者创建典型set理论的集合属性，例如与、或、闭包 commons-dbutil.jar:对传统操作数据库的类进行二次封装，可以把结果集转化成List(1)org.apache.commons.dbutilsDbUtils : 提供如关闭连接、装载JDBC驱动程序等常规工作的工具类QueryRunner: 该类简单化了SQL查询，它与ResultSetHandler组合在一起使用可以完成大部分的数据库操作，能够大大减少编码量。QueryLoader: 属性文件加载器，主要用于加载属性文件中的SQL到内存中。(2)org.apache.commons.dbutils.handlersArrayHandler：将ResultSet中第一行的数据转化成对象数组ArrayListHandler将ResultSet中所有的数据转化成List，List中存放的是Object[]BeanHandler：将ResultSet中第一行的数据转化成类对象BeanListHandler：将ResultSet中所有的数据转化成List，List中存放的是类对象ColumnListHandler：将ResultSet中某一列的数据存成List，List中存放的是Object对象KeyedHandler：将ResultSet中存成映射，key为某一列对应为Map。Map中存放的是数据MapHandler：将ResultSet中第一行的数据存成Map映射MapListHandler：将ResultSet中所有的数据存成List。List中存放的是MapScalarHandler：将ResultSet中一条记录的其中某一列的数据存成Object java开发中主要用到的jar包总结axis.jar:SOAP引擎包jaxrpc.jar:Axis运行所需要的组件包saaj.jar:创建到端点的点到点连接的方法、创建并处理SOAP消息和附件的方法，以及接收和处理SOAP错误的方法. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139wsdl4j-1.5.1.jar:Axis运行所需要的组件包activation.jar:JAF框架的jar包annotations-api.jar:使用注解所需jarant.jar:用于自动化调用程序完成项目的编译，打包，测试等aopalliance-1.0.jar:支持spring AOPasm-2.2.3.jar:ASM字节码库asm-commons-2.2.3.jar:ASM字节码库asm-util-2.2.3.jar:Java字节码操纵和分析框架aspectjrt.jar:处理事务和AOP所需的包aspectjweaver.jar:处理事务和AOP所需的包axiom-api-1.2.7.jar:Axis 对象模型axiom-impl-1.2.7.jar:Axis 对象模型bcprov-jdk15-140.jar:基于java1.5 的加密算法实现bfmclientmodel.jar:使用WebSphere所需jar包bpcclientcore.jar:使用WebSphere所需jar包bpe137650.jar:提供远程访问BPE容器的实现。 bsh-2.0b4.jar:解决负载逻辑运算c3p0-0.9.0.jar:开放源代码的JDBC连接池cglib-nodep-2.1_3.jar:Spring中自动代理所需jar包cobertura.jar:测量测试覆盖率commons-beanutils-1.7.0.jar:动态的获取/设值Java Bean的属性commons-chain-1.1.jar:实现责任链设计模式的Java 类库commons-codec-1.3.jar:用来处理常用的编码方法的工具类包，例如DES、SHA1、MD5、Base64等等commons-collections-3.1.jar:对标准java Collection的扩展commons-collections.jar:对标准java Collection的扩展commons-discovery-0.2.jar:用来发现、查找和实现可插入式接口，提供一些一般类实例化、单件的生命周期管理的常用方法.db2jcc.jarjava连接DB2所需jarcommons-digester-1.8.jar:用于处理struts-config.xml配置文件commons-fileupload-1.1.1.jar:struts上传文件commons-httpclient-3.1.jar:用来简化HTTP客户端与服务器端进行各种通信编程实现commons-io-1.1.jar:针对java.io.InputStream和Reader进行了扩展commons-lang-2.4.jar:对java.lang.*的扩展commons-logging-1.1.1.jar:日志包commons-pool-1.3.jar:实现对象池化框架commons-validator-1.3.1.jar:用来把验证规则程序提取出来，以供重复使用db2jcc_license_cu.jar:java:连接DB2所需jardom4j-1.6.1.jar:解析XMLehcache-1.2.4.jar:hibernate的二级缓存如果用ehcache的时候需要此jar包emf.jar:基于Eclipse的模型框架ezmorph-1.0.6.jar:使用JSON所需的jar包FastInfoset-1.2.2.jar:使用WebService所需的jar包freemarker-2.3.8.jar:Strus2支持的一种表现层框架geronimo-activation_1.1_spec-1.0.2.jar:Apache Geronimo所带jar包，geronimo-annotation_1.0_spec-1.1.1.jar:Apache Geronimo所带jar包geronimo-javamail_1.4_spec-1.3.jar:Apache Geronimo所带jar包geronimo-jaxws_2.1_spec-1.0.jar:Apache Geronimo所带jar包geronimo-jms_1.1_spec-1.1.1.jar:Apache Geronimo所带jar包geronimo-servlet_2.5_spec-1.2.jar:Apache Geronimo所带jar包geronimo-stax-api_1.0_spec-1.0.1.jar:Apache Geronimo所带jar包hibernate3.jar:Hibernate3的核心jar包htmclientmodel.jar:使用WebSphere所需jar包jakarta-oro.jar:一套文本处理工具，提供per15.0兼容的表达式，AWK-like表达式，Glob表达式。javassist.jar:Javassist 字节码解释器jaxb-api-2.1.jar:使用WebService所需的jar包jaxb-impl-2.1.7.jar:使用CXF所需jar包jaxb-xjc-2.1.7.jar:使用CXF所需jar包jaxen-1.1.1.jar:解析XMLjcifs-1.2.22.jar:实现单点登陆jdom2-1.0.jar:解析XMLjdom-1.0.jar:解析XMLjettison-1.0.1.jar:使用CXF所需jar包jetty-6.1.9.jar:Jetty Http服务器jarjetty-util-6.1.9.jar:Jetty Http服务器jarjra-1.0-alpha-4.jar:使用CXF所需jar包js-1.6R7.jar:使用CXF所需jar包json-lib-2.2.3-jdk13.jar:使用JSON所需的jar包jsonplugin-0.25.jar:strus2的JSON插件jsr311-api-0.8.jar:使用CXF所需jar包jstl.jar:JSTL标签库jta.jar:标准的 JAVA 事务处理接口junit.jar:用于单元测试jxl.jar:通过java操作excel表格的工具类库ldap.jar:JNDI目录服务和LDAO服务器所需的jarldapbp.jar:JNDI目录服务和LDAO服务器所需的jarlog4j-1.2.15.jar:提供日志功能mail.jar:java发送邮件jar包neethi-2.0.4.jar:使用CXF所需jar包odmg-3.0.jar:ODMG是一个ORM的规范，Hibernate实现了ODMG规范，这是一个核心的库ognl-2.6.11.jar:struts2中OGNL语言ojdbc14.jar:Oracle数据库驱动包opensaml-1.1.jar:使用CXF所需jar包oro-2.0.8.jar:Validator框架所需的jar包oscache-2.1.jar:Java 对象的缓存工具poi-3.1-FINAL-20080629.jar:操作exce所需jar包poi-contrib-3.1-FINAL-20080629.jar:操作exce所需jar包poi-ooxml-3.6-20091214.jar:提供对office的word、excel、visio及ppt的操作poi-ooxml-schemas-3.6-20091214.jar:提供对office的word、excel、visio及ppt的操作poi-scratchpad-3.1-FINAL-20080629.jar:提供对office的word、excel、visio及ppt的操作processCommon.jarIBM WebSphere:运行所需jarProcessCommonLibrary.jarIBM WebSphere:运行所需jarprocessIdentity.jarIBM WebSphere:运行所需jarProcessInformation.jar:进程监视软件包proxool-0.9.1.jar:数据库连接池proxool-cglib.jar:数据库连接池quartz-1.6.0.jar:开源作业调度框架saaj-api-1.3.jar:使用axis所需的jarsaaj-impl-1.3.2.jar:使用axis所需的jarserializer-2.7.1.jar:XML序列化slf4j-jdk14-1.5.6.jar:整合各种日志框架的工具spring208.jar:spring核心框架spring-ldap-1.2-RC1.jar:spring下LDAPspring-mock.jar:spring的测试框架standard.jar:使用JSTL标签库所需的jarstax-api-1.0.1.jar:解析XMLstruts2-core-2.0.14.jar:struts2核心jarstruts2-spring-plugin-2.0.6.jar:struts2整合Spring所需jartaglibs-datetime.jar:Apache开源组织提供标签库，用于格式化日期。taglibs-mailer.jar:用于发送邮件taglibs-string.jar:Apache开源组织提供标签库，用于对String的操作。task137650.jar:Portal技术在SOA系统集成应用中实现所需的jarutility.jar:Apache开源组织提供标签库velocity-1.5.jar:一个免费的开源模板框架wsdl4j-1.6.2.jar:用来解析服务的WSDl文件wss4j-1.5.4.jar:创建CXF所需jarwstx-asl-3.2.6.jar:创建CXF所需jarxbean-spring-2.8.jar:使用xfire所需jarxerces-2.6.2.jar:XML解析器xfire-all-1.2.6.jar:用于实现WebServiceXmlSchema-1.1.jar:使用xfire所需jarxwork-2.0.7.jar:WebWork核心jar]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[java-web基本应用]]></title>
      <url>%2F2017%2F04%2F11%2Fjava-web%E5%9F%BA%E6%9C%AC%E5%BA%94%E7%94%A8%2F</url>
      <content type="text"><![CDATA[Spring Validation（使用Hibernate Validator）判断表单 数据是否空,大小,email…..1、需要的jar包hibernate-validator.5.1.3.Final.jar validation-api.1.1.0.Final.jar 在spring3之后，任何支持JSR303的validator（如Hibernate Validator）都可以通过简单配置引入，只需要在配置xml中加入，这时validatemessage的属性文件默认为classpath下的ValidationMessages.properties：12&lt;!-- support JSR303 annotation if JSR 303 validation present on classpath --&gt;&lt;mvc:annotation-driven /&gt; 注解123456789101112131415161718192021Bean Validation 中内置的 constraint @Null 被注释的元素必须为 null @NotNull 被注释的元素必须不为 null @AssertTrue 被注释的元素必须为 true @AssertFalse 被注释的元素必须为 false @Min(value) 被注释的元素必须是一个数字，其值必须大于等于指定的最小值 @Max(value) 被注释的元素必须是一个数字，其值必须小于等于指定的最大值 @DecimalMin(value) 被注释的元素必须是一个数字，其值必须大于等于指定的最小值 @DecimalMax(value) 被注释的元素必须是一个数字，其值必须小于等于指定的最大值 @Size(max=, min=) 被注释的元素的大小必须在指定的范围内 @Digits (integer, fraction) 被注释的元素必须是一个数字，其值必须在可接受的范围内 @Past 被注释的元素必须是一个过去的日期 @Future 被注释的元素必须是一个将来的日期 @Pattern(regex=,flag=) 被注释的元素必须符合指定的正则表达式 Hibernate Validator 附加的 constraint @NotBlank(message =) 验证字符串非null，且长度必须大于0 @Email 被注释的元素必须是电子邮箱地址 @Length(min=,max=) 被注释的字符串的大小必须在指定的范围内 @NotEmpty 被注释的字符串的必须非空 @Range(min=,max=,message=) 被注释的元素必须在合适的范围内 使用在对象中 12345public class Customer &#123; 7 8 @NotEmpty //make sure name is not empty 9 String name;10 在controller中 12345678910111213public class SignUpController &#123;14 15 @RequestMapping(value = &quot;/signup&quot;, method = RequestMethod.POST)16 public String addCustomer(@Valid Customer customer,(这里使用) BindingResult result) &#123;17 18 if (result.hasErrors()) &#123;19 return &quot;SignUpForm&quot;;20 &#125; else &#123;21 return &quot;Done&quot;;22 &#125;23 24 &#125; 文件上传]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[有用的网站都在这里]]></title>
      <url>%2F2017%2F04%2F10%2F%E6%9C%89%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99%E9%83%BD%E5%9C%A8%E8%BF%99%E9%87%8C%2F</url>
      <content type="text"><![CDATA[真的有用各种操作系统 工具什么样的都有http://www.itellyou.cn/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo的简单使用]]></title>
      <url>%2F2017%2F04%2F10%2Fhexo%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[hexo的简单使用创建新博客的cd到hexo的根目录文件1hexo new post &quot;hexo的简单使用&quot; (标题) 分布1hexo g 调试模式1hexo s --debug 启动服务1hexo s 上传github1hexo d]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[git的简单使用]]></title>
      <url>%2F2017%2F04%2F06%2Fgit%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[git的简单使用查看远程库信息，使用 1git remote -v; 本地新建的分支如果不推送到远程，对其他人就是不可见的; 从本地推送分支，使用 12git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交; 在本地创建和远程分支对应的分支，使用 本地和远程分支的名称最好一致; 1git checkout -b branch-name origin/branch-name， 建立本地分支和远程分支的关联，使用 1git branch --set-upstream branch-name origin/branch-name; 从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。 分支查看当前在哪个分支1git branch 切换分支1git checkout develop 合并分支1git merge --no-ff develop 创建分支 1git checkout -b feature-x develop 删除分支1git branch -d feature-x 如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，那么可以这么做。12git push origin test:master // 提交本地test分支作为远程的master分支git push origin test:test // 提交本地test分支作为远程的test分支 1git push --set-upstream origin develop 提交本地分支到远程新的分支 如果想删除远程的分支呢？类似于上面，如果:左边的分支为空，那么将删除:右边的远程的分支。 1git push origin :test // 刚提交到远程的test将被删除，但是本地还会保存的，不用担心 Git回滚分支首先备份当前的master分支，防止回滚失败。 从origin master中新建一个分支，名称随便，比如，master_backup。 备份完成后，将master回滚到指定的版本,注意这个地方，是将本地的master分支回滚到指定的版本1git reset --hard commit-id 回滚本地master完成后，将回滚后的代码push到远端master，覆盖远端master分支。方法为：通过git命令，必须通过命令来，sourcetree的方式不可行。 1git push -f origin master。必须有-f，表示强制的意思。 此时，会要求用户输入远端仓库的用户名和密码，用于确认当前用户具有-f的权限。 push成功后，就可以删除备份的master了。sourcetree的方式也是不可以的1git branch -D master_backup tag 加标签添加标签 12git tag 0.1.0;git tag -a v0.1.2 -m “0.1.2版本” 发布标签12git push origin v0.1.2git push --tags 切换1git checkout [tagname] 删除1git tag -d v0.1.2 # 删除标签 删除远程标签1git push origin :refs/tags/标签名 git远程连接git删除远程连接1git remote rm origin 添加远程连接1git remote add origin 远程仓库地址 1git push --set-upstream origin master]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[从iOS转战JavaWeb]]></title>
      <url>%2F2017%2F04%2F01%2F%E4%BB%8EiOS%E8%BD%AC%E6%88%98JavaWeb%2F</url>
      <content type="text"><![CDATA[需要持续不段的学习才行hexo的简单命令12345678910111213hexo new&quot;postName&quot; #新建文章hexo new page&quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #将.deploy目录部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[出游小记]]></title>
      <url>%2F2017%2F04%2F01%2Fhello-world%2F</url>
      <content type="text"><![CDATA[贸然的一次出行突然间的放松电脑已经成为我的习惯，突然发现自己好像少了某些重要的东西–电脑，原来已经三天没摸电脑了，电脑已成为我生活的一部分了。但是出游让我学到了其他的存在。 生活随心长时间的办公室生活已经让我不知道改怎么释放自己，总是很在乎别人怎么看，好像自己是在为别人而活。看到一对夫妻在公园玩，高高兴兴的啃着北京方便面，然而有些人却扯着嘴角在笑，他们依然在到处游玩，不要为别人的想法而影响自己，在不影响公共秩序的情况下，做我们自己想做的事情，让自己开心的事情，何乐不为呢。看到某一个逗逼，把吃饭盒放在一个大酒缸的前面，旁边人来人往，自己放了5毛钱，让我给他拍照。我当时的第一想法是：丢不丢人啊，这么多人看着，照片我都不想拍，可是别人都不认识我，我怕什么呢。当然这只是一个最简单的解释，我们玩我们自己的，有没有影响到别人，管他怎么看呢，我开心就好，出来玩嘛本身就图个开心。其实我也想玩很多，但就是怕别人看到笑话，而不敢做，这不是违背了我们出来玩的初衷吗？这并不是没心没肺，只是在生活中腰做真实的自己。关心身边的人，这次被一个向导无微不至的照顾，让我无地自容啊，此处省略一万字。。。。。。 沟通这是人与人的社会，沟通无处不在，如果只有你一个人倒也显得无趣。鼓起勇气只要能开个头，就又可能聊下去，可能又多了一个朋友，或者增长一下见闻，毕竟每一个人的经历都是不同的。比如在飞机上，没手机可玩，大家要么睡觉，要么双眼无神的看着远方，其实和身边的人聊一聊，时间过的也挺快呢，还能了解一下别人的人经历，也有可能就多了一个人生中的朋友，说的庸俗一点，也有可能是你下一个发财的机会。 小结没有文彩，就当记一下流水账喽，发现自己的缺点，就要努力去攻克他，早上走向人生巅峰，赢取心爱的她。]]></content>
    </entry>

    
  
  
</search>
